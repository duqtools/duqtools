name: Tests

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Python info
        run: |
          which python
          python --version

      - name: Install dependencies
        run: |
          python -m pip install -e .[develop]

      - name: Test with pytest
        run: coverage run -p -m pytest

  docs:
    name: Test Docs
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: docs-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Python info
        run: |
          which python
          python --version

      - name: Install dependencies
        run: |
          python -m pip install -e .[docs]

      - name: Test making docs
        run: mkdocs build
